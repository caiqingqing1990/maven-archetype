<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="  
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- ================================ properties 配置文件 ==================================== -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations"
			value="classpath:config/*.properties" />
	</bean>
	
	<!-- ================================ 数据源 ================================================= -->
	<!-- Druid 数据源配置 -->
	<bean id="mainDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  destroy-method="close">
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="driverClassName" value="${driverClassName}" />
		<property name="filters" value="${filters}" />

		<property name="maxActive" value="${maxActive}" />
		<property name="initialSize" value="${initialSize}" />
		<property name="maxWait" value="${maxWait}" />
		<property name="minIdle" value="${minIdle}" />

		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${validationQuery}" />
		<property name="testWhileIdle" value="${testWhileIdle}" />
		<property name="testOnBorrow" value="${testOnBorrow}" />
		<property name="testOnReturn" value="${testOnReturn}" />
		<property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
		<property name="removeAbandoned" value="${removeAbandoned}" /> <!-- 打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" /> <!-- 1800秒，也就是30分钟 -->
		<property name="logAbandoned" value="${logAbandoned}" /> <!-- 关闭abanded连接时输出错误日志 -->
	</bean>

	<!-- 懒加载数据源，在使用的时候才初始化连接 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
		<property name="targetDataSource">
			<ref local="mainDataSource" />
		</property>
	</bean>

	<!-- ================================ 事务相关控制 ============================================== -->
	<!-- 启用annotation配置 -->
	<context:annotation-config />
	
	<!-- 启用AOP -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 事务管理器 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 扫描需要事务管理的包下所有类 -->
	<context:component-scan base-package="net.yuanmomo.framework.business" />
	
	<!-- 启用基于annotation的事务配置方式 -->
	<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true" />
	
	<!-- ================================ MyBatis ============================================= -->
	<!-- MyBatis 数据源和bean配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
  		<property name="typeAliasesPackage" value="net.yuanmomo.framework.bean"/>
	</bean>

	<!-- MyBatis自动扫描mapper和xml文件 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="net.yuanmomo.framework.mybatis.mapper" />
	</bean>


	<!-- ================================ 配置国际化资源文件路径 ============================================= -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<!-- 定义消息资源文件的相对路径 -->
		<property name="basename" value="i18n/message"/>
	</bean>
	<!-- 基于Cookie的本地化解析器 -->
	<!--<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">-->
		<!--<property name="cookieMaxAge" value="604800"/>-->
		<!--<property name="defaultLocale" value="zh_CN"/>-->
		<!--<property name="cookieName" value="Language"></property>-->
	<!--</bean>-->
	<!-- 基于Session的本地化解析器 -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" >
		<property name="defaultLocale" value="zh_CN"/>
	</bean>

	<!-- ================================ 验证码图片生成器 ============================================= -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg type="java.util.Properties">
					<props>
						<prop key="kaptcha.border">no</prop>
						<prop key="kaptcha.image.width">150</prop>
						<prop key="kaptcha.image.height">50</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.font.color">red</prop>
						<prop key="kaptcha.textproducer.font.names">Arial</prop>
						<prop key="kaptcha.noise.color">black</prop>
						<prop key="kaptcha.textproducer.font.size">40</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>

	<!-- ================================ 配置BeanUtil ============================================= -->
	<bean class="net.yuanmomo.util.BeanUtil"></bean>
</beans>